# -*- coding: utf-8 -*-
"""aires

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-yerKbEIpAbeB9g48qWrOS_RtKPFe3sU
"""

!pip install streamlit
!apt-get install -y xvfb libgtk2.0-0 libgtk-3-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2

# Run streamlit in the background with ngrok tunnel (complex, requires setup)
import streamlit as st
import pytesseract
from pdf2image import convert_from_bytes
import openai
import os

# Set your OpenAI API key here or set environment variable OPENAI_API_KEY
openai.api_key = os.getenv("OPENAI_API_KEY") or "YOUR_OPENAI_API_KEY"

st.title("AI-Powered Resume Scanner Agent")

uploaded_file = st.file_uploader("Upload your resume (PDF)", type=["pdf"])

def extract_text_from_pdf(pdf_bytes):
    images = convert_from_bytes(pdf_bytes)
    text = ""
    for img in images:
        text += pytesseract.image_to_string(img) + "\n"
    return text

def query_openai(prompt):
    response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.7,
        max_tokens=1000,
    )
    return response.choices[0].message.content

if uploaded_file:
    with st.spinner("Extracting text from PDF..."):
        pdf_bytes = uploaded_file.read()
        resume_text = extract_text_from_pdf(pdf_bytes)
    st.text_area("Extracted Resume Text (preview)", resume_text[:3000], height=300)

    job_role = st.text_input("Enter the job role you are applying for")
    weak_areas = st.text_input("Enter your weak skills/areas (comma separated)")

    if st.button("Analyze Resume"):
        if not job_role.strip():
            st.error("Please enter the job role you are applying for.")
        else:
            prompt = f"""
You are an expert ATS resume reviewer and career coach.

Here is the resume text:
\"\"\"{resume_text}\"\"\"

The candidate is applying for the role: "{job_role}"

The candidate feels weak in these skills/areas: "{weak_areas}"

Please provide:
1. An estimated ATS score (percentage) based on how well the resume matches typical keywords for the role.
2. List of key skills missing from the resume relevant to the role.
3. Personalized suggestions on how the candidate can improve their resume and skills.
4. Recommended learning resources or courses for the weak areas and missing skills.
Write the response clearly and concisely.
"""
            with st.spinner("Getting analysis from AI..."):
                result = query_openai(prompt)
            st.markdown("### AI Resume Analysis & Suggestions")
            st.write(result)